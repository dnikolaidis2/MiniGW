Terminals unused in grammar

   "null"


Grammar

    0 $accept: begin $end

    1 begin: program

    2 program: var_const_decls functions main

    3 main: "function" "start" "(" ")" ":" "void" "{" var_const_decls statements "}"

    4 functions: functions function_decl
    5          | %empty

    6 function_decl: "function" IDENTIFIER "(" function_param_decl ")" ":" ret_type_decl "{" var_const_decls statements "}" ";"

    7 statements: statements statement
    8           | statement

    9 statement: open_statement
   10          | closed_statement

   11 open_statement: "if" "(" expression ")" statement
   12               | "if" "(" expression ")" closed_statement "else" open_statement
   13               | "while" "(" expression ")" open_statement
   14               | "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement

   16 closed_statement: simple_statement
   17                 | "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | "while" "(" expression ")" closed_statement
   19                 | "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement

   21 simple_statement: "{" statements "}" ";"
   22                 | IDENTIFIER "=" expression ";"
   23                 | IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | "break" ";"
   25                 | "continue" ";"
   26                 | "return" ";"
   27                 | "return" expression ";"
   28                 | IDENTIFIER "(" function_call_param ")" ";"

   29 assign_stmt: IDENTIFIER "=" expression
   30            | IDENTIFIER "[" expression "]" "=" expression

   31 var_const_decls: var_const_decls var_const_decl
   32                | %empty

   33 var_const_decl: var_decl ":" type_decl ";"
   34               | const_decl ":" type_decl ";"

   35 const_decl: "const" var_req
   36           | const_decl "," var_req

   37 var_decl: "var" var_not_req
   38         | var_decl "," var_not_req

   39 var_not_req: IDENTIFIER "=" expression
   40            | IDENTIFIER
   41            | IDENTIFIER "[" CONST_INT "]"
   42            | IDENTIFIER "[" "]"

   43 var_req: IDENTIFIER "=" expression

   44 ret_type_decl: type_decl
   45              | "[" "]" type_decl

   46 type_decl: "number"
   47          | "boolean"
   48          | "string"
   49          | "void"

   50 function_call_delim: function_call_delim "," expression
   51                    | expression

   52 function_call_param: function_call_delim
   53                    | %empty

   54 param_decl: IDENTIFIER ":" type_decl
   55           | IDENTIFIER "[" "]" ":" type_decl

   56 param_delim: param_delim "," param_decl
   57            | param_decl

   58 function_param_decl: param_delim
   59                    | %empty

   60 expression: CONST_INT
   61           | CONST_FLOAT
   62           | CONST_FALSE
   63           | CONST_TRUE
   64           | CONST_STRING
   65           | IDENTIFIER
   66           | IDENTIFIER "[" expression "]"
   67           | "(" expression ")"
   68           | "not" expression
   69           | "+" expression
   70           | "-" expression
   71           | expression "**" expression
   72           | expression "*" expression
   73           | expression "/" expression
   74           | expression "%" expression
   75           | expression "+" expression
   76           | expression "-" expression
   77           | expression "==" expression
   78           | expression "!=" expression
   79           | expression "<" expression
   80           | expression "<=" expression
   81           | expression "and" expression
   82           | expression "or" expression
   83           | IDENTIFIER "(" function_call_param ")"


Terminals, with rules where they appear

$end (0) 0
error (256)
"number" (258) 46
"boolean" (259) 47
"void" (260) 3 49
"string" (261) 48
"var" (262) 37
"if" (263) 11 12 17
"else" (264) 12 17
"for" (265) 14 15 19 20
"while" (266) 13 18
"function" (267) 3 6
"continue" (268) 25
"const" (269) 35
"break" (270) 24
"null" (271)
"start" (272) 3
"return" (273) 26 27
IDENTIFIER (274) 6 22 23 28 29 30 39 40 41 42 43 54 55 65 66 83
CONST_INT (275) 41 60
CONST_FLOAT (276) 61
CONST_TRUE (277) 63
CONST_FALSE (278) 62
CONST_STRING (279) 64
"+" (280) 69 75
"-" (281) 70 76
"*" (282) 72
"/" (283) 73
"%" (284) 74
"==" (285) 77
"<" (286) 79
"<=" (287) 80
"!=" (288) 78
"**" (289) 71
"and" (290) 81
"or" (291) 82
"not" (292) 68
"=" (293) 22 23 29 30 39 43
";" (294) 6 14 15 19 20 21 22 23 24 25 26 27 28 33 34
"," (295) 36 38 50 56
":" (296) 3 6 33 34 54 55
"(" (297) 3 6 11 12 13 14 15 17 18 19 20 28 67 83
")" (298) 3 6 11 12 13 14 15 17 18 19 20 28 67 83
"[" (299) 23 30 41 42 45 55 66
"]" (300) 23 30 41 42 45 55 66
"{" (301) 3 6 21
"}" (302) 3 6 21
UMINUS (303)
UPLUS (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
begin (51)
    on left: 1, on right: 0
program (52)
    on left: 2, on right: 1
main (53)
    on left: 3, on right: 2
functions (54)
    on left: 4 5, on right: 2 4
function_decl (55)
    on left: 6, on right: 4
statements (56)
    on left: 7 8, on right: 3 6 7 21
statement (57)
    on left: 9 10, on right: 7 8 11
open_statement (58)
    on left: 11 12 13 14 15, on right: 9 12 13 14 15
closed_statement (59)
    on left: 16 17 18 19 20, on right: 10 12 17 18 19 20
simple_statement (60)
    on left: 21 22 23 24 25 26 27 28, on right: 16
assign_stmt (61)
    on left: 29 30, on right: 14 15 19 20
var_const_decls (62)
    on left: 31 32, on right: 2 3 6 31
var_const_decl (63)
    on left: 33 34, on right: 31
const_decl (64)
    on left: 35 36, on right: 34 36
var_decl (65)
    on left: 37 38, on right: 33 38
var_not_req (66)
    on left: 39 40 41 42, on right: 37 38
var_req (67)
    on left: 43, on right: 35 36
ret_type_decl (68)
    on left: 44 45, on right: 6
type_decl (69)
    on left: 46 47 48 49, on right: 33 34 44 45 54 55
function_call_delim (70)
    on left: 50 51, on right: 50 52
function_call_param (71)
    on left: 52 53, on right: 28 83
param_decl (72)
    on left: 54 55, on right: 56 57
param_delim (73)
    on left: 56 57, on right: 56 58
function_param_decl (74)
    on left: 58 59, on right: 6
expression (75)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
    78 79 80 81 82 83, on right: 11 12 13 14 17 18 19 22 23 27 29 30
    39 43 50 51 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82


State 0

    0 $accept: . begin $end
    1 begin: . program
    2 program: . var_const_decls functions main
   31 var_const_decls: . var_const_decls var_const_decl
   32                | . %empty

    $default  reduce using rule 32 (var_const_decls)

    begin            go to state 1
    program          go to state 2
    var_const_decls  go to state 3


State 1

    0 $accept: begin . $end

    $end  shift, and go to state 4


State 2

    1 begin: program .

    $default  reduce using rule 1 (begin)


State 3

    2 program: var_const_decls . functions main
    4 functions: . functions function_decl
    5          | . %empty  ["function"]
   31 var_const_decls: var_const_decls . var_const_decl
   33 var_const_decl: . var_decl ":" type_decl ";"
   34               | . const_decl ":" type_decl ";"
   35 const_decl: . "const" var_req
   36           | . const_decl "," var_req
   37 var_decl: . "var" var_not_req
   38         | . var_decl "," var_not_req

    "var"    shift, and go to state 5
    "const"  shift, and go to state 6

    $default  reduce using rule 5 (functions)

    functions       go to state 7
    var_const_decl  go to state 8
    const_decl      go to state 9
    var_decl        go to state 10


State 4

    0 $accept: begin $end .

    $default  accept


State 5

   37 var_decl: "var" . var_not_req
   39 var_not_req: . IDENTIFIER "=" expression
   40            | . IDENTIFIER
   41            | . IDENTIFIER "[" CONST_INT "]"
   42            | . IDENTIFIER "[" "]"

    IDENTIFIER  shift, and go to state 11

    var_not_req  go to state 12


State 6

   35 const_decl: "const" . var_req
   43 var_req: . IDENTIFIER "=" expression

    IDENTIFIER  shift, and go to state 13

    var_req  go to state 14


State 7

    2 program: var_const_decls functions . main
    3 main: . "function" "start" "(" ")" ":" "void" "{" var_const_decls statements "}"
    4 functions: functions . function_decl
    6 function_decl: . "function" IDENTIFIER "(" function_param_decl ")" ":" ret_type_decl "{" var_const_decls statements "}" ";"

    "function"  shift, and go to state 15

    main           go to state 16
    function_decl  go to state 17


State 8

   31 var_const_decls: var_const_decls var_const_decl .

    $default  reduce using rule 31 (var_const_decls)


State 9

   34 var_const_decl: const_decl . ":" type_decl ";"
   36 const_decl: const_decl . "," var_req

    ","  shift, and go to state 18
    ":"  shift, and go to state 19


State 10

   33 var_const_decl: var_decl . ":" type_decl ";"
   38 var_decl: var_decl . "," var_not_req

    ","  shift, and go to state 20
    ":"  shift, and go to state 21


State 11

   39 var_not_req: IDENTIFIER . "=" expression
   40            | IDENTIFIER .  [",", ":"]
   41            | IDENTIFIER . "[" CONST_INT "]"
   42            | IDENTIFIER . "[" "]"

    "="  shift, and go to state 22
    "["  shift, and go to state 23

    $default  reduce using rule 40 (var_not_req)


State 12

   37 var_decl: "var" var_not_req .

    $default  reduce using rule 37 (var_decl)


State 13

   43 var_req: IDENTIFIER . "=" expression

    "="  shift, and go to state 24


State 14

   35 const_decl: "const" var_req .

    $default  reduce using rule 35 (const_decl)


State 15

    3 main: "function" . "start" "(" ")" ":" "void" "{" var_const_decls statements "}"
    6 function_decl: "function" . IDENTIFIER "(" function_param_decl ")" ":" ret_type_decl "{" var_const_decls statements "}" ";"

    "start"     shift, and go to state 25
    IDENTIFIER  shift, and go to state 26


State 16

    2 program: var_const_decls functions main .

    $default  reduce using rule 2 (program)


State 17

    4 functions: functions function_decl .

    $default  reduce using rule 4 (functions)


State 18

   36 const_decl: const_decl "," . var_req
   43 var_req: . IDENTIFIER "=" expression

    IDENTIFIER  shift, and go to state 13

    var_req  go to state 27


State 19

   34 var_const_decl: const_decl ":" . type_decl ";"
   46 type_decl: . "number"
   47          | . "boolean"
   48          | . "string"
   49          | . "void"

    "number"   shift, and go to state 28
    "boolean"  shift, and go to state 29
    "void"     shift, and go to state 30
    "string"   shift, and go to state 31

    type_decl  go to state 32


State 20

   38 var_decl: var_decl "," . var_not_req
   39 var_not_req: . IDENTIFIER "=" expression
   40            | . IDENTIFIER
   41            | . IDENTIFIER "[" CONST_INT "]"
   42            | . IDENTIFIER "[" "]"

    IDENTIFIER  shift, and go to state 11

    var_not_req  go to state 33


State 21

   33 var_const_decl: var_decl ":" . type_decl ";"
   46 type_decl: . "number"
   47          | . "boolean"
   48          | . "string"
   49          | . "void"

    "number"   shift, and go to state 28
    "boolean"  shift, and go to state 29
    "void"     shift, and go to state 30
    "string"   shift, and go to state 31

    type_decl  go to state 34


State 22

   39 var_not_req: IDENTIFIER "=" . expression
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 45


State 23

   41 var_not_req: IDENTIFIER "[" . CONST_INT "]"
   42            | IDENTIFIER "[" . "]"

    CONST_INT  shift, and go to state 46
    "]"        shift, and go to state 47


State 24

   43 var_req: IDENTIFIER "=" . expression
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 48


State 25

    3 main: "function" "start" . "(" ")" ":" "void" "{" var_const_decls statements "}"

    "("  shift, and go to state 49


State 26

    6 function_decl: "function" IDENTIFIER . "(" function_param_decl ")" ":" ret_type_decl "{" var_const_decls statements "}" ";"

    "("  shift, and go to state 50


State 27

   36 const_decl: const_decl "," var_req .

    $default  reduce using rule 36 (const_decl)


State 28

   46 type_decl: "number" .

    $default  reduce using rule 46 (type_decl)


State 29

   47 type_decl: "boolean" .

    $default  reduce using rule 47 (type_decl)


State 30

   49 type_decl: "void" .

    $default  reduce using rule 49 (type_decl)


State 31

   48 type_decl: "string" .

    $default  reduce using rule 48 (type_decl)


State 32

   34 var_const_decl: const_decl ":" type_decl . ";"

    ";"  shift, and go to state 51


State 33

   38 var_decl: var_decl "," var_not_req .

    $default  reduce using rule 38 (var_decl)


State 34

   33 var_const_decl: var_decl ":" type_decl . ";"

    ";"  shift, and go to state 52


State 35

   65 expression: IDENTIFIER .  ["+", "-", "*", "/", "%", "==", "<", "<=", "!=", "**", "and", "or", ";", ",", ":", ")", "]"]
   66           | IDENTIFIER . "[" expression "]"
   83           | IDENTIFIER . "(" function_call_param ")"

    "("  shift, and go to state 53
    "["  shift, and go to state 54

    $default  reduce using rule 65 (expression)


State 36

   60 expression: CONST_INT .

    $default  reduce using rule 60 (expression)


State 37

   61 expression: CONST_FLOAT .

    $default  reduce using rule 61 (expression)


State 38

   63 expression: CONST_TRUE .

    $default  reduce using rule 63 (expression)


State 39

   62 expression: CONST_FALSE .

    $default  reduce using rule 62 (expression)


State 40

   64 expression: CONST_STRING .

    $default  reduce using rule 64 (expression)


State 41

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   69           | "+" . expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 55


State 42

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   70           | "-" . expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 56


State 43

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   68           | "not" . expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 57


State 44

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   67           | "(" . expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 58


State 45

   39 var_not_req: IDENTIFIER "=" expression .  [",", ":"]
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70

    $default  reduce using rule 39 (var_not_req)


State 46

   41 var_not_req: IDENTIFIER "[" CONST_INT . "]"

    "]"  shift, and go to state 71


State 47

   42 var_not_req: IDENTIFIER "[" "]" .

    $default  reduce using rule 42 (var_not_req)


State 48

   43 var_req: IDENTIFIER "=" expression .  [",", ":"]
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70

    $default  reduce using rule 43 (var_req)


State 49

    3 main: "function" "start" "(" . ")" ":" "void" "{" var_const_decls statements "}"

    ")"  shift, and go to state 72


State 50

    6 function_decl: "function" IDENTIFIER "(" . function_param_decl ")" ":" ret_type_decl "{" var_const_decls statements "}" ";"
   54 param_decl: . IDENTIFIER ":" type_decl
   55           | . IDENTIFIER "[" "]" ":" type_decl
   56 param_delim: . param_delim "," param_decl
   57            | . param_decl
   58 function_param_decl: . param_delim
   59                    | . %empty  [")"]

    IDENTIFIER  shift, and go to state 73

    $default  reduce using rule 59 (function_param_decl)

    param_decl           go to state 74
    param_delim          go to state 75
    function_param_decl  go to state 76


State 51

   34 var_const_decl: const_decl ":" type_decl ";" .

    $default  reduce using rule 34 (var_const_decl)


State 52

   33 var_const_decl: var_decl ":" type_decl ";" .

    $default  reduce using rule 33 (var_const_decl)


State 53

   50 function_call_delim: . function_call_delim "," expression
   51                    | . expression
   52 function_call_param: . function_call_delim
   53                    | . %empty  [")"]
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"
   83           | IDENTIFIER "(" . function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    $default  reduce using rule 53 (function_call_param)

    function_call_delim  go to state 77
    function_call_param  go to state 78
    expression           go to state 79


State 54

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   66           | IDENTIFIER "[" . expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 80


State 55

   69 expression: "+" expression .  ["+", "-", "*", "/", "%", "==", "<", "<=", "!=", "**", "and", "or", ";", ",", ":", ")", "]"]
   71           | expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    $default  reduce using rule 69 (expression)

    Conflict between rule 69 and token "+" resolved as reduce ("+" < UPLUS).
    Conflict between rule 69 and token "-" resolved as reduce ("-" < UPLUS).
    Conflict between rule 69 and token "*" resolved as reduce ("*" < UPLUS).
    Conflict between rule 69 and token "/" resolved as reduce ("/" < UPLUS).
    Conflict between rule 69 and token "%" resolved as reduce ("%" < UPLUS).
    Conflict between rule 69 and token "==" resolved as reduce ("==" < UPLUS).
    Conflict between rule 69 and token "<" resolved as reduce ("<" < UPLUS).
    Conflict between rule 69 and token "<=" resolved as reduce ("<=" < UPLUS).
    Conflict between rule 69 and token "!=" resolved as reduce ("!=" < UPLUS).
    Conflict between rule 69 and token "**" resolved as reduce ("**" < UPLUS).
    Conflict between rule 69 and token "and" resolved as reduce ("and" < UPLUS).
    Conflict between rule 69 and token "or" resolved as reduce ("or" < UPLUS).


State 56

   70 expression: "-" expression .  ["+", "-", "*", "/", "%", "==", "<", "<=", "!=", "**", "and", "or", ";", ",", ":", ")", "]"]
   71           | expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    $default  reduce using rule 70 (expression)

    Conflict between rule 70 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 70 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 70 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 70 and token "/" resolved as reduce ("/" < UMINUS).
    Conflict between rule 70 and token "%" resolved as reduce ("%" < UMINUS).
    Conflict between rule 70 and token "==" resolved as reduce ("==" < UMINUS).
    Conflict between rule 70 and token "<" resolved as reduce ("<" < UMINUS).
    Conflict between rule 70 and token "<=" resolved as reduce ("<=" < UMINUS).
    Conflict between rule 70 and token "!=" resolved as reduce ("!=" < UMINUS).
    Conflict between rule 70 and token "**" resolved as reduce ("**" < UMINUS).
    Conflict between rule 70 and token "and" resolved as reduce ("and" < UMINUS).
    Conflict between rule 70 and token "or" resolved as reduce ("or" < UMINUS).


State 57

   68 expression: "not" expression .  ["+", "-", "*", "/", "%", "==", "<", "<=", "!=", "**", "and", "or", ";", ",", ":", ")", "]"]
   71           | expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    $default  reduce using rule 68 (expression)

    Conflict between rule 68 and token "+" resolved as reduce ("+" < "not").
    Conflict between rule 68 and token "-" resolved as reduce ("-" < "not").
    Conflict between rule 68 and token "*" resolved as reduce ("*" < "not").
    Conflict between rule 68 and token "/" resolved as reduce ("/" < "not").
    Conflict between rule 68 and token "%" resolved as reduce ("%" < "not").
    Conflict between rule 68 and token "==" resolved as reduce ("==" < "not").
    Conflict between rule 68 and token "<" resolved as reduce ("<" < "not").
    Conflict between rule 68 and token "<=" resolved as reduce ("<=" < "not").
    Conflict between rule 68 and token "!=" resolved as reduce ("!=" < "not").
    Conflict between rule 68 and token "**" resolved as reduce ("**" < "not").
    Conflict between rule 68 and token "and" resolved as reduce ("and" < "not").
    Conflict between rule 68 and token "or" resolved as reduce ("or" < "not").


State 58

   67 expression: "(" expression . ")"
   71           | expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    ")"    shift, and go to state 81


State 59

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   75           | expression "+" . expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 82


State 60

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   76           | expression "-" . expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 83


State 61

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   72           | expression "*" . expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 84


State 62

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   73           | expression "/" . expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 85


State 63

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   74           | expression "%" . expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 86


State 64

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   77           | expression "==" . expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 87


State 65

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   79           | expression "<" . expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 88


State 66

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   80           | expression "<=" . expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 89


State 67

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   78           | expression "!=" . expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 90


State 68

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   71           | expression "**" . expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 91


State 69

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   81           | expression "and" . expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 92


State 70

   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   82           | expression "or" . expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 93


State 71

   41 var_not_req: IDENTIFIER "[" CONST_INT "]" .

    $default  reduce using rule 41 (var_not_req)


State 72

    3 main: "function" "start" "(" ")" . ":" "void" "{" var_const_decls statements "}"

    ":"  shift, and go to state 94


State 73

   54 param_decl: IDENTIFIER . ":" type_decl
   55           | IDENTIFIER . "[" "]" ":" type_decl

    ":"  shift, and go to state 95
    "["  shift, and go to state 96


State 74

   57 param_delim: param_decl .

    $default  reduce using rule 57 (param_delim)


State 75

   56 param_delim: param_delim . "," param_decl
   58 function_param_decl: param_delim .  [")"]

    ","  shift, and go to state 97

    $default  reduce using rule 58 (function_param_decl)


State 76

    6 function_decl: "function" IDENTIFIER "(" function_param_decl . ")" ":" ret_type_decl "{" var_const_decls statements "}" ";"

    ")"  shift, and go to state 98


State 77

   50 function_call_delim: function_call_delim . "," expression
   52 function_call_param: function_call_delim .  [")"]

    ","  shift, and go to state 99

    $default  reduce using rule 52 (function_call_param)


State 78

   83 expression: IDENTIFIER "(" function_call_param . ")"

    ")"  shift, and go to state 100


State 79

   51 function_call_delim: expression .  [",", ")"]
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70

    $default  reduce using rule 51 (function_call_delim)


State 80

   66 expression: IDENTIFIER "[" expression . "]"
   71           | expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    "]"    shift, and go to state 101


State 81

   67 expression: "(" expression ")" .

    $default  reduce using rule 67 (expression)


State 82

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   75           | expression "+" expression .  ["+", "-", "==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "*"   shift, and go to state 61
    "/"   shift, and go to state 62
    "%"   shift, and go to state 63
    "**"  shift, and go to state 68

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token "+" resolved as reduce (%left "+").
    Conflict between rule 75 and token "-" resolved as reduce (%left "-").
    Conflict between rule 75 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 75 and token "/" resolved as shift ("+" < "/").
    Conflict between rule 75 and token "%" resolved as shift ("+" < "%").
    Conflict between rule 75 and token "==" resolved as reduce ("==" < "+").
    Conflict between rule 75 and token "<" resolved as reduce ("<" < "+").
    Conflict between rule 75 and token "<=" resolved as reduce ("<=" < "+").
    Conflict between rule 75 and token "!=" resolved as reduce ("!=" < "+").
    Conflict between rule 75 and token "**" resolved as shift ("+" < "**").
    Conflict between rule 75 and token "and" resolved as reduce ("and" < "+").
    Conflict between rule 75 and token "or" resolved as reduce ("or" < "+").


State 83

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   76           | expression "-" expression .  ["+", "-", "==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "*"   shift, and go to state 61
    "/"   shift, and go to state 62
    "%"   shift, and go to state 63
    "**"  shift, and go to state 68

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token "+" resolved as reduce (%left "+").
    Conflict between rule 76 and token "-" resolved as reduce (%left "-").
    Conflict between rule 76 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 76 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 76 and token "%" resolved as shift ("-" < "%").
    Conflict between rule 76 and token "==" resolved as reduce ("==" < "-").
    Conflict between rule 76 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 76 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 76 and token "!=" resolved as reduce ("!=" < "-").
    Conflict between rule 76 and token "**" resolved as shift ("-" < "**").
    Conflict between rule 76 and token "and" resolved as reduce ("and" < "-").
    Conflict between rule 76 and token "or" resolved as reduce ("or" < "-").


State 84

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   72           | expression "*" expression .  ["+", "-", "*", "/", "%", "==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "**"  shift, and go to state 68

    $default  reduce using rule 72 (expression)

    Conflict between rule 72 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 72 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 72 and token "*" resolved as reduce (%left "*").
    Conflict between rule 72 and token "/" resolved as reduce (%left "/").
    Conflict between rule 72 and token "%" resolved as reduce (%left "%").
    Conflict between rule 72 and token "==" resolved as reduce ("==" < "*").
    Conflict between rule 72 and token "<" resolved as reduce ("<" < "*").
    Conflict between rule 72 and token "<=" resolved as reduce ("<=" < "*").
    Conflict between rule 72 and token "!=" resolved as reduce ("!=" < "*").
    Conflict between rule 72 and token "**" resolved as shift ("*" < "**").
    Conflict between rule 72 and token "and" resolved as reduce ("and" < "*").
    Conflict between rule 72 and token "or" resolved as reduce ("or" < "*").


State 85

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   73           | expression "/" expression .  ["+", "-", "*", "/", "%", "==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "**"  shift, and go to state 68

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 73 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 73 and token "*" resolved as reduce (%left "*").
    Conflict between rule 73 and token "/" resolved as reduce (%left "/").
    Conflict between rule 73 and token "%" resolved as reduce (%left "%").
    Conflict between rule 73 and token "==" resolved as reduce ("==" < "/").
    Conflict between rule 73 and token "<" resolved as reduce ("<" < "/").
    Conflict between rule 73 and token "<=" resolved as reduce ("<=" < "/").
    Conflict between rule 73 and token "!=" resolved as reduce ("!=" < "/").
    Conflict between rule 73 and token "**" resolved as shift ("/" < "**").
    Conflict between rule 73 and token "and" resolved as reduce ("and" < "/").
    Conflict between rule 73 and token "or" resolved as reduce ("or" < "/").


State 86

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   74           | expression "%" expression .  ["+", "-", "*", "/", "%", "==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "**"  shift, and go to state 68

    $default  reduce using rule 74 (expression)

    Conflict between rule 74 and token "+" resolved as reduce ("+" < "%").
    Conflict between rule 74 and token "-" resolved as reduce ("-" < "%").
    Conflict between rule 74 and token "*" resolved as reduce (%left "*").
    Conflict between rule 74 and token "/" resolved as reduce (%left "/").
    Conflict between rule 74 and token "%" resolved as reduce (%left "%").
    Conflict between rule 74 and token "==" resolved as reduce ("==" < "%").
    Conflict between rule 74 and token "<" resolved as reduce ("<" < "%").
    Conflict between rule 74 and token "<=" resolved as reduce ("<=" < "%").
    Conflict between rule 74 and token "!=" resolved as reduce ("!=" < "%").
    Conflict between rule 74 and token "**" resolved as shift ("%" < "**").
    Conflict between rule 74 and token "and" resolved as reduce ("and" < "%").
    Conflict between rule 74 and token "or" resolved as reduce ("or" < "%").


State 87

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   77           | expression "==" expression .  ["==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"   shift, and go to state 59
    "-"   shift, and go to state 60
    "*"   shift, and go to state 61
    "/"   shift, and go to state 62
    "%"   shift, and go to state 63
    "**"  shift, and go to state 68

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token "+" resolved as shift ("==" < "+").
    Conflict between rule 77 and token "-" resolved as shift ("==" < "-").
    Conflict between rule 77 and token "*" resolved as shift ("==" < "*").
    Conflict between rule 77 and token "/" resolved as shift ("==" < "/").
    Conflict between rule 77 and token "%" resolved as shift ("==" < "%").
    Conflict between rule 77 and token "==" resolved as reduce (%left "==").
    Conflict between rule 77 and token "<" resolved as reduce (%left "<").
    Conflict between rule 77 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 77 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 77 and token "**" resolved as shift ("==" < "**").
    Conflict between rule 77 and token "and" resolved as reduce ("and" < "==").
    Conflict between rule 77 and token "or" resolved as reduce ("or" < "==").


State 88

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   79           | expression "<" expression .  ["==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"   shift, and go to state 59
    "-"   shift, and go to state 60
    "*"   shift, and go to state 61
    "/"   shift, and go to state 62
    "%"   shift, and go to state 63
    "**"  shift, and go to state 68

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token "+" resolved as shift ("<" < "+").
    Conflict between rule 79 and token "-" resolved as shift ("<" < "-").
    Conflict between rule 79 and token "*" resolved as shift ("<" < "*").
    Conflict between rule 79 and token "/" resolved as shift ("<" < "/").
    Conflict between rule 79 and token "%" resolved as shift ("<" < "%").
    Conflict between rule 79 and token "==" resolved as reduce (%left "==").
    Conflict between rule 79 and token "<" resolved as reduce (%left "<").
    Conflict between rule 79 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 79 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 79 and token "**" resolved as shift ("<" < "**").
    Conflict between rule 79 and token "and" resolved as reduce ("and" < "<").
    Conflict between rule 79 and token "or" resolved as reduce ("or" < "<").


State 89

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   80           | expression "<=" expression .  ["==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"   shift, and go to state 59
    "-"   shift, and go to state 60
    "*"   shift, and go to state 61
    "/"   shift, and go to state 62
    "%"   shift, and go to state 63
    "**"  shift, and go to state 68

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token "+" resolved as shift ("<=" < "+").
    Conflict between rule 80 and token "-" resolved as shift ("<=" < "-").
    Conflict between rule 80 and token "*" resolved as shift ("<=" < "*").
    Conflict between rule 80 and token "/" resolved as shift ("<=" < "/").
    Conflict between rule 80 and token "%" resolved as shift ("<=" < "%").
    Conflict between rule 80 and token "==" resolved as reduce (%left "==").
    Conflict between rule 80 and token "<" resolved as reduce (%left "<").
    Conflict between rule 80 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 80 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 80 and token "**" resolved as shift ("<=" < "**").
    Conflict between rule 80 and token "and" resolved as reduce ("and" < "<=").
    Conflict between rule 80 and token "or" resolved as reduce ("or" < "<=").


State 90

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   78           | expression "!=" expression .  ["==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"   shift, and go to state 59
    "-"   shift, and go to state 60
    "*"   shift, and go to state 61
    "/"   shift, and go to state 62
    "%"   shift, and go to state 63
    "**"  shift, and go to state 68

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token "+" resolved as shift ("!=" < "+").
    Conflict between rule 78 and token "-" resolved as shift ("!=" < "-").
    Conflict between rule 78 and token "*" resolved as shift ("!=" < "*").
    Conflict between rule 78 and token "/" resolved as shift ("!=" < "/").
    Conflict between rule 78 and token "%" resolved as shift ("!=" < "%").
    Conflict between rule 78 and token "==" resolved as reduce (%left "==").
    Conflict between rule 78 and token "<" resolved as reduce (%left "<").
    Conflict between rule 78 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 78 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 78 and token "**" resolved as shift ("!=" < "**").
    Conflict between rule 78 and token "and" resolved as reduce ("and" < "!=").
    Conflict between rule 78 and token "or" resolved as reduce ("or" < "!=").


State 91

   71 expression: expression . "**" expression
   71           | expression "**" expression .  ["+", "-", "*", "/", "%", "==", "<", "<=", "!=", "and", "or", ";", ",", ":", ")", "]"]
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "**"  shift, and go to state 68

    $default  reduce using rule 71 (expression)

    Conflict between rule 71 and token "+" resolved as reduce ("+" < "**").
    Conflict between rule 71 and token "-" resolved as reduce ("-" < "**").
    Conflict between rule 71 and token "*" resolved as reduce ("*" < "**").
    Conflict between rule 71 and token "/" resolved as reduce ("/" < "**").
    Conflict between rule 71 and token "%" resolved as reduce ("%" < "**").
    Conflict between rule 71 and token "==" resolved as reduce ("==" < "**").
    Conflict between rule 71 and token "<" resolved as reduce ("<" < "**").
    Conflict between rule 71 and token "<=" resolved as reduce ("<=" < "**").
    Conflict between rule 71 and token "!=" resolved as reduce ("!=" < "**").
    Conflict between rule 71 and token "**" resolved as shift (%right "**").
    Conflict between rule 71 and token "and" resolved as reduce ("and" < "**").
    Conflict between rule 71 and token "or" resolved as reduce ("or" < "**").


State 92

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   81           | expression "and" expression .  ["and", "or", ";", ",", ":", ")", "]"]
   82           | expression . "or" expression

    "+"   shift, and go to state 59
    "-"   shift, and go to state 60
    "*"   shift, and go to state 61
    "/"   shift, and go to state 62
    "%"   shift, and go to state 63
    "=="  shift, and go to state 64
    "<"   shift, and go to state 65
    "<="  shift, and go to state 66
    "!="  shift, and go to state 67
    "**"  shift, and go to state 68

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token "+" resolved as shift ("and" < "+").
    Conflict between rule 81 and token "-" resolved as shift ("and" < "-").
    Conflict between rule 81 and token "*" resolved as shift ("and" < "*").
    Conflict between rule 81 and token "/" resolved as shift ("and" < "/").
    Conflict between rule 81 and token "%" resolved as shift ("and" < "%").
    Conflict between rule 81 and token "==" resolved as shift ("and" < "==").
    Conflict between rule 81 and token "<" resolved as shift ("and" < "<").
    Conflict between rule 81 and token "<=" resolved as shift ("and" < "<=").
    Conflict between rule 81 and token "!=" resolved as shift ("and" < "!=").
    Conflict between rule 81 and token "**" resolved as shift ("and" < "**").
    Conflict between rule 81 and token "and" resolved as reduce (%left "and").
    Conflict between rule 81 and token "or" resolved as reduce ("or" < "and").


State 93

   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression
   82           | expression "or" expression .  ["or", ";", ",", ":", ")", "]"]

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token "+" resolved as shift ("or" < "+").
    Conflict between rule 82 and token "-" resolved as shift ("or" < "-").
    Conflict between rule 82 and token "*" resolved as shift ("or" < "*").
    Conflict between rule 82 and token "/" resolved as shift ("or" < "/").
    Conflict between rule 82 and token "%" resolved as shift ("or" < "%").
    Conflict between rule 82 and token "==" resolved as shift ("or" < "==").
    Conflict between rule 82 and token "<" resolved as shift ("or" < "<").
    Conflict between rule 82 and token "<=" resolved as shift ("or" < "<=").
    Conflict between rule 82 and token "!=" resolved as shift ("or" < "!=").
    Conflict between rule 82 and token "**" resolved as shift ("or" < "**").
    Conflict between rule 82 and token "and" resolved as shift ("or" < "and").
    Conflict between rule 82 and token "or" resolved as reduce (%left "or").


State 94

    3 main: "function" "start" "(" ")" ":" . "void" "{" var_const_decls statements "}"

    "void"  shift, and go to state 102


State 95

   46 type_decl: . "number"
   47          | . "boolean"
   48          | . "string"
   49          | . "void"
   54 param_decl: IDENTIFIER ":" . type_decl

    "number"   shift, and go to state 28
    "boolean"  shift, and go to state 29
    "void"     shift, and go to state 30
    "string"   shift, and go to state 31

    type_decl  go to state 103


State 96

   55 param_decl: IDENTIFIER "[" . "]" ":" type_decl

    "]"  shift, and go to state 104


State 97

   54 param_decl: . IDENTIFIER ":" type_decl
   55           | . IDENTIFIER "[" "]" ":" type_decl
   56 param_delim: param_delim "," . param_decl

    IDENTIFIER  shift, and go to state 73

    param_decl  go to state 105


State 98

    6 function_decl: "function" IDENTIFIER "(" function_param_decl ")" . ":" ret_type_decl "{" var_const_decls statements "}" ";"

    ":"  shift, and go to state 106


State 99

   50 function_call_delim: function_call_delim "," . expression
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 107


State 100

   83 expression: IDENTIFIER "(" function_call_param ")" .

    $default  reduce using rule 83 (expression)


State 101

   66 expression: IDENTIFIER "[" expression "]" .

    $default  reduce using rule 66 (expression)


State 102

    3 main: "function" "start" "(" ")" ":" "void" . "{" var_const_decls statements "}"

    "{"  shift, and go to state 108


State 103

   54 param_decl: IDENTIFIER ":" type_decl .

    $default  reduce using rule 54 (param_decl)


State 104

   55 param_decl: IDENTIFIER "[" "]" . ":" type_decl

    ":"  shift, and go to state 109


State 105

   56 param_delim: param_delim "," param_decl .

    $default  reduce using rule 56 (param_delim)


State 106

    6 function_decl: "function" IDENTIFIER "(" function_param_decl ")" ":" . ret_type_decl "{" var_const_decls statements "}" ";"
   44 ret_type_decl: . type_decl
   45              | . "[" "]" type_decl
   46 type_decl: . "number"
   47          | . "boolean"
   48          | . "string"
   49          | . "void"

    "number"   shift, and go to state 28
    "boolean"  shift, and go to state 29
    "void"     shift, and go to state 30
    "string"   shift, and go to state 31
    "["        shift, and go to state 110

    ret_type_decl  go to state 111
    type_decl      go to state 112


State 107

   50 function_call_delim: function_call_delim "," expression .  [",", ")"]
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70

    $default  reduce using rule 50 (function_call_delim)


State 108

    3 main: "function" "start" "(" ")" ":" "void" "{" . var_const_decls statements "}"
   31 var_const_decls: . var_const_decls var_const_decl
   32                | . %empty

    $default  reduce using rule 32 (var_const_decls)

    var_const_decls  go to state 113


State 109

   46 type_decl: . "number"
   47          | . "boolean"
   48          | . "string"
   49          | . "void"
   55 param_decl: IDENTIFIER "[" "]" ":" . type_decl

    "number"   shift, and go to state 28
    "boolean"  shift, and go to state 29
    "void"     shift, and go to state 30
    "string"   shift, and go to state 31

    type_decl  go to state 114


State 110

   45 ret_type_decl: "[" . "]" type_decl

    "]"  shift, and go to state 115


State 111

    6 function_decl: "function" IDENTIFIER "(" function_param_decl ")" ":" ret_type_decl . "{" var_const_decls statements "}" ";"

    "{"  shift, and go to state 116


State 112

   44 ret_type_decl: type_decl .

    $default  reduce using rule 44 (ret_type_decl)


State 113

    3 main: "function" "start" "(" ")" ":" "void" "{" var_const_decls . statements "}"
    7 statements: . statements statement
    8           | . statement
    9 statement: . open_statement
   10          | . closed_statement
   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"
   31 var_const_decls: var_const_decls . var_const_decl
   33 var_const_decl: . var_decl ":" type_decl ";"
   34               | . const_decl ":" type_decl ";"
   35 const_decl: . "const" var_req
   36           | . const_decl "," var_req
   37 var_decl: . "var" var_not_req
   38         | . var_decl "," var_not_req

    "var"       shift, and go to state 5
    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "const"     shift, and go to state 6
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124

    statements        go to state 125
    statement         go to state 126
    open_statement    go to state 127
    closed_statement  go to state 128
    simple_statement  go to state 129
    var_const_decl    go to state 8
    const_decl        go to state 9
    var_decl          go to state 10


State 114

   55 param_decl: IDENTIFIER "[" "]" ":" type_decl .

    $default  reduce using rule 55 (param_decl)


State 115

   45 ret_type_decl: "[" "]" . type_decl
   46 type_decl: . "number"
   47          | . "boolean"
   48          | . "string"
   49          | . "void"

    "number"   shift, and go to state 28
    "boolean"  shift, and go to state 29
    "void"     shift, and go to state 30
    "string"   shift, and go to state 31

    type_decl  go to state 130


State 116

    6 function_decl: "function" IDENTIFIER "(" function_param_decl ")" ":" ret_type_decl "{" . var_const_decls statements "}" ";"
   31 var_const_decls: . var_const_decls var_const_decl
   32                | . %empty

    $default  reduce using rule 32 (var_const_decls)

    var_const_decls  go to state 131


State 117

   11 open_statement: "if" . "(" expression ")" statement
   12               | "if" . "(" expression ")" closed_statement "else" open_statement
   17 closed_statement: "if" . "(" expression ")" closed_statement "else" closed_statement

    "("  shift, and go to state 132


State 118

   14 open_statement: "for" . "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | "for" . "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   19 closed_statement: "for" . "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | "for" . "(" assign_stmt ";" ";" assign_stmt ")" closed_statement

    "("  shift, and go to state 133


State 119

   13 open_statement: "while" . "(" expression ")" open_statement
   18 closed_statement: "while" . "(" expression ")" closed_statement

    "("  shift, and go to state 134


State 120

   25 simple_statement: "continue" . ";"

    ";"  shift, and go to state 135


State 121

   24 simple_statement: "break" . ";"

    ";"  shift, and go to state 136


State 122

   26 simple_statement: "return" . ";"
   27                 | "return" . expression ";"
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    ";"           shift, and go to state 137
    "("           shift, and go to state 44

    expression  go to state 138


State 123

   22 simple_statement: IDENTIFIER . "=" expression ";"
   23                 | IDENTIFIER . "[" expression "]" "=" expression ";"
   28                 | IDENTIFIER . "(" function_call_param ")" ";"

    "="  shift, and go to state 139
    "("  shift, and go to state 140
    "["  shift, and go to state 141


State 124

    7 statements: . statements statement
    8           | . statement
    9 statement: . open_statement
   10          | . closed_statement
   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   21                 | "{" . statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"

    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124

    statements        go to state 142
    statement         go to state 126
    open_statement    go to state 127
    closed_statement  go to state 128
    simple_statement  go to state 129


State 125

    3 main: "function" "start" "(" ")" ":" "void" "{" var_const_decls statements . "}"
    7 statements: statements . statement
    9 statement: . open_statement
   10          | . closed_statement
   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"

    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124
    "}"         shift, and go to state 143

    statement         go to state 144
    open_statement    go to state 127
    closed_statement  go to state 128
    simple_statement  go to state 129


State 126

    8 statements: statement .

    $default  reduce using rule 8 (statements)


State 127

    9 statement: open_statement .

    $default  reduce using rule 9 (statement)


State 128

   10 statement: closed_statement .

    $default  reduce using rule 10 (statement)


State 129

   16 closed_statement: simple_statement .

    $default  reduce using rule 16 (closed_statement)


State 130

   45 ret_type_decl: "[" "]" type_decl .

    $default  reduce using rule 45 (ret_type_decl)


State 131

    6 function_decl: "function" IDENTIFIER "(" function_param_decl ")" ":" ret_type_decl "{" var_const_decls . statements "}" ";"
    7 statements: . statements statement
    8           | . statement
    9 statement: . open_statement
   10          | . closed_statement
   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"
   31 var_const_decls: var_const_decls . var_const_decl
   33 var_const_decl: . var_decl ":" type_decl ";"
   34               | . const_decl ":" type_decl ";"
   35 const_decl: . "const" var_req
   36           | . const_decl "," var_req
   37 var_decl: . "var" var_not_req
   38         | . var_decl "," var_not_req

    "var"       shift, and go to state 5
    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "const"     shift, and go to state 6
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124

    statements        go to state 145
    statement         go to state 126
    open_statement    go to state 127
    closed_statement  go to state 128
    simple_statement  go to state 129
    var_const_decl    go to state 8
    const_decl        go to state 9
    var_decl          go to state 10


State 132

   11 open_statement: "if" "(" . expression ")" statement
   12               | "if" "(" . expression ")" closed_statement "else" open_statement
   17 closed_statement: "if" "(" . expression ")" closed_statement "else" closed_statement
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 146


State 133

   14 open_statement: "for" "(" . assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | "for" "(" . assign_stmt ";" ";" assign_stmt ")" open_statement
   19 closed_statement: "for" "(" . assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | "for" "(" . assign_stmt ";" ";" assign_stmt ")" closed_statement
   29 assign_stmt: . IDENTIFIER "=" expression
   30            | . IDENTIFIER "[" expression "]" "=" expression

    IDENTIFIER  shift, and go to state 147

    assign_stmt  go to state 148


State 134

   13 open_statement: "while" "(" . expression ")" open_statement
   18 closed_statement: "while" "(" . expression ")" closed_statement
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 149


State 135

   25 simple_statement: "continue" ";" .

    $default  reduce using rule 25 (simple_statement)


State 136

   24 simple_statement: "break" ";" .

    $default  reduce using rule 24 (simple_statement)


State 137

   26 simple_statement: "return" ";" .

    $default  reduce using rule 26 (simple_statement)


State 138

   27 simple_statement: "return" expression . ";"
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    ";"    shift, and go to state 150


State 139

   22 simple_statement: IDENTIFIER "=" . expression ";"
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 151


State 140

   28 simple_statement: IDENTIFIER "(" . function_call_param ")" ";"
   50 function_call_delim: . function_call_delim "," expression
   51                    | . expression
   52 function_call_param: . function_call_delim
   53                    | . %empty  [")"]
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    $default  reduce using rule 53 (function_call_param)

    function_call_delim  go to state 77
    function_call_param  go to state 152
    expression           go to state 79


State 141

   23 simple_statement: IDENTIFIER "[" . expression "]" "=" expression ";"
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 153


State 142

    7 statements: statements . statement
    9 statement: . open_statement
   10          | . closed_statement
   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   21                 | "{" statements . "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"

    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124
    "}"         shift, and go to state 154

    statement         go to state 144
    open_statement    go to state 127
    closed_statement  go to state 128
    simple_statement  go to state 129


State 143

    3 main: "function" "start" "(" ")" ":" "void" "{" var_const_decls statements "}" .

    $default  reduce using rule 3 (main)


State 144

    7 statements: statements statement .

    $default  reduce using rule 7 (statements)


State 145

    6 function_decl: "function" IDENTIFIER "(" function_param_decl ")" ":" ret_type_decl "{" var_const_decls statements . "}" ";"
    7 statements: statements . statement
    9 statement: . open_statement
   10          | . closed_statement
   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"

    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124
    "}"         shift, and go to state 155

    statement         go to state 144
    open_statement    go to state 127
    closed_statement  go to state 128
    simple_statement  go to state 129


State 146

   11 open_statement: "if" "(" expression . ")" statement
   12               | "if" "(" expression . ")" closed_statement "else" open_statement
   17 closed_statement: "if" "(" expression . ")" closed_statement "else" closed_statement
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    ")"    shift, and go to state 156


State 147

   29 assign_stmt: IDENTIFIER . "=" expression
   30            | IDENTIFIER . "[" expression "]" "=" expression

    "="  shift, and go to state 157
    "["  shift, and go to state 158


State 148

   14 open_statement: "for" "(" assign_stmt . ";" expression ";" assign_stmt ")" open_statement
   15               | "for" "(" assign_stmt . ";" ";" assign_stmt ")" open_statement
   19 closed_statement: "for" "(" assign_stmt . ";" expression ";" assign_stmt ")" closed_statement
   20                 | "for" "(" assign_stmt . ";" ";" assign_stmt ")" closed_statement

    ";"  shift, and go to state 159


State 149

   13 open_statement: "while" "(" expression . ")" open_statement
   18 closed_statement: "while" "(" expression . ")" closed_statement
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    ")"    shift, and go to state 160


State 150

   27 simple_statement: "return" expression ";" .

    $default  reduce using rule 27 (simple_statement)


State 151

   22 simple_statement: IDENTIFIER "=" expression . ";"
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    ";"    shift, and go to state 161


State 152

   28 simple_statement: IDENTIFIER "(" function_call_param . ")" ";"

    ")"  shift, and go to state 162


State 153

   23 simple_statement: IDENTIFIER "[" expression . "]" "=" expression ";"
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    "]"    shift, and go to state 163


State 154

   21 simple_statement: "{" statements "}" . ";"

    ";"  shift, and go to state 164


State 155

    6 function_decl: "function" IDENTIFIER "(" function_param_decl ")" ":" ret_type_decl "{" var_const_decls statements "}" . ";"

    ";"  shift, and go to state 165


State 156

    9 statement: . open_statement
   10          | . closed_statement
   11 open_statement: . "if" "(" expression ")" statement
   11               | "if" "(" expression ")" . statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   12               | "if" "(" expression ")" . closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   17                 | "if" "(" expression ")" . closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"

    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124

    statement         go to state 166
    open_statement    go to state 127
    closed_statement  go to state 167
    simple_statement  go to state 129


State 157

   29 assign_stmt: IDENTIFIER "=" . expression
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 168


State 158

   30 assign_stmt: IDENTIFIER "[" . expression "]" "=" expression
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 169


State 159

   14 open_statement: "for" "(" assign_stmt ";" . expression ";" assign_stmt ")" open_statement
   15               | "for" "(" assign_stmt ";" . ";" assign_stmt ")" open_statement
   19 closed_statement: "for" "(" assign_stmt ";" . expression ";" assign_stmt ")" closed_statement
   20                 | "for" "(" assign_stmt ";" . ";" assign_stmt ")" closed_statement
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    ";"           shift, and go to state 170
    "("           shift, and go to state 44

    expression  go to state 171


State 160

   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   13               | "while" "(" expression ")" . open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   18                 | "while" "(" expression ")" . closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"

    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124

    open_statement    go to state 172
    closed_statement  go to state 173
    simple_statement  go to state 129


State 161

   22 simple_statement: IDENTIFIER "=" expression ";" .

    $default  reduce using rule 22 (simple_statement)


State 162

   28 simple_statement: IDENTIFIER "(" function_call_param ")" . ";"

    ";"  shift, and go to state 174


State 163

   23 simple_statement: IDENTIFIER "[" expression "]" . "=" expression ";"

    "="  shift, and go to state 175


State 164

   21 simple_statement: "{" statements "}" ";" .

    $default  reduce using rule 21 (simple_statement)


State 165

    6 function_decl: "function" IDENTIFIER "(" function_param_decl ")" ":" ret_type_decl "{" var_const_decls statements "}" ";" .

    $default  reduce using rule 6 (function_decl)


State 166

   11 open_statement: "if" "(" expression ")" statement .

    $default  reduce using rule 11 (open_statement)


State 167

   10 statement: closed_statement .  ["if", "for", "while", "continue", "break", "return", IDENTIFIER, "{", "}"]
   12 open_statement: "if" "(" expression ")" closed_statement . "else" open_statement
   17 closed_statement: "if" "(" expression ")" closed_statement . "else" closed_statement

    "else"  shift, and go to state 176

    $default  reduce using rule 10 (statement)


State 168

   29 assign_stmt: IDENTIFIER "=" expression .  [";", ")"]
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70

    $default  reduce using rule 29 (assign_stmt)


State 169

   30 assign_stmt: IDENTIFIER "[" expression . "]" "=" expression
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    "]"    shift, and go to state 177


State 170

   15 open_statement: "for" "(" assign_stmt ";" ";" . assign_stmt ")" open_statement
   20 closed_statement: "for" "(" assign_stmt ";" ";" . assign_stmt ")" closed_statement
   29 assign_stmt: . IDENTIFIER "=" expression
   30            | . IDENTIFIER "[" expression "]" "=" expression

    IDENTIFIER  shift, and go to state 147

    assign_stmt  go to state 178


State 171

   14 open_statement: "for" "(" assign_stmt ";" expression . ";" assign_stmt ")" open_statement
   19 closed_statement: "for" "(" assign_stmt ";" expression . ";" assign_stmt ")" closed_statement
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    ";"    shift, and go to state 179


State 172

   13 open_statement: "while" "(" expression ")" open_statement .

    $default  reduce using rule 13 (open_statement)


State 173

   18 closed_statement: "while" "(" expression ")" closed_statement .

    $default  reduce using rule 18 (closed_statement)


State 174

   28 simple_statement: IDENTIFIER "(" function_call_param ")" ";" .

    $default  reduce using rule 28 (simple_statement)


State 175

   23 simple_statement: IDENTIFIER "[" expression "]" "=" . expression ";"
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 180


State 176

   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   12               | "if" "(" expression ")" closed_statement "else" . open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   17                 | "if" "(" expression ")" closed_statement "else" . closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"

    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124

    open_statement    go to state 181
    closed_statement  go to state 182
    simple_statement  go to state 129


State 177

   30 assign_stmt: IDENTIFIER "[" expression "]" . "=" expression

    "="  shift, and go to state 183


State 178

   15 open_statement: "for" "(" assign_stmt ";" ";" assign_stmt . ")" open_statement
   20 closed_statement: "for" "(" assign_stmt ";" ";" assign_stmt . ")" closed_statement

    ")"  shift, and go to state 184


State 179

   14 open_statement: "for" "(" assign_stmt ";" expression ";" . assign_stmt ")" open_statement
   19 closed_statement: "for" "(" assign_stmt ";" expression ";" . assign_stmt ")" closed_statement
   29 assign_stmt: . IDENTIFIER "=" expression
   30            | . IDENTIFIER "[" expression "]" "=" expression

    IDENTIFIER  shift, and go to state 147

    assign_stmt  go to state 185


State 180

   23 simple_statement: IDENTIFIER "[" expression "]" "=" expression . ";"
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70
    ";"    shift, and go to state 186


State 181

   12 open_statement: "if" "(" expression ")" closed_statement "else" open_statement .

    $default  reduce using rule 12 (open_statement)


State 182

   17 closed_statement: "if" "(" expression ")" closed_statement "else" closed_statement .

    $default  reduce using rule 17 (closed_statement)


State 183

   30 assign_stmt: IDENTIFIER "[" expression "]" "=" . expression
   60 expression: . CONST_INT
   61           | . CONST_FLOAT
   62           | . CONST_FALSE
   63           | . CONST_TRUE
   64           | . CONST_STRING
   65           | . IDENTIFIER
   66           | . IDENTIFIER "[" expression "]"
   67           | . "(" expression ")"
   68           | . "not" expression
   69           | . "+" expression
   70           | . "-" expression
   71           | . expression "**" expression
   72           | . expression "*" expression
   73           | . expression "/" expression
   74           | . expression "%" expression
   75           | . expression "+" expression
   76           | . expression "-" expression
   77           | . expression "==" expression
   78           | . expression "!=" expression
   79           | . expression "<" expression
   80           | . expression "<=" expression
   81           | . expression "and" expression
   82           | . expression "or" expression
   83           | . IDENTIFIER "(" function_call_param ")"

    IDENTIFIER    shift, and go to state 35
    CONST_INT     shift, and go to state 36
    CONST_FLOAT   shift, and go to state 37
    CONST_TRUE    shift, and go to state 38
    CONST_FALSE   shift, and go to state 39
    CONST_STRING  shift, and go to state 40
    "+"           shift, and go to state 41
    "-"           shift, and go to state 42
    "not"         shift, and go to state 43
    "("           shift, and go to state 44

    expression  go to state 187


State 184

   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   15               | "for" "(" assign_stmt ";" ";" assign_stmt ")" . open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   20                 | "for" "(" assign_stmt ";" ";" assign_stmt ")" . closed_statement
   21 simple_statement: . "{" statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"

    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124

    open_statement    go to state 188
    closed_statement  go to state 189
    simple_statement  go to state 129


State 185

   14 open_statement: "for" "(" assign_stmt ";" expression ";" assign_stmt . ")" open_statement
   19 closed_statement: "for" "(" assign_stmt ";" expression ";" assign_stmt . ")" closed_statement

    ")"  shift, and go to state 190


State 186

   23 simple_statement: IDENTIFIER "[" expression "]" "=" expression ";" .

    $default  reduce using rule 23 (simple_statement)


State 187

   30 assign_stmt: IDENTIFIER "[" expression "]" "=" expression .  [";", ")"]
   71 expression: expression . "**" expression
   72           | expression . "*" expression
   73           | expression . "/" expression
   74           | expression . "%" expression
   75           | expression . "+" expression
   76           | expression . "-" expression
   77           | expression . "==" expression
   78           | expression . "!=" expression
   79           | expression . "<" expression
   80           | expression . "<=" expression
   81           | expression . "and" expression
   82           | expression . "or" expression

    "+"    shift, and go to state 59
    "-"    shift, and go to state 60
    "*"    shift, and go to state 61
    "/"    shift, and go to state 62
    "%"    shift, and go to state 63
    "=="   shift, and go to state 64
    "<"    shift, and go to state 65
    "<="   shift, and go to state 66
    "!="   shift, and go to state 67
    "**"   shift, and go to state 68
    "and"  shift, and go to state 69
    "or"   shift, and go to state 70

    $default  reduce using rule 30 (assign_stmt)


State 188

   15 open_statement: "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement .

    $default  reduce using rule 15 (open_statement)


State 189

   20 closed_statement: "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement .

    $default  reduce using rule 20 (closed_statement)


State 190

   11 open_statement: . "if" "(" expression ")" statement
   12               | . "if" "(" expression ")" closed_statement "else" open_statement
   13               | . "while" "(" expression ")" open_statement
   14               | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement
   14               | "for" "(" assign_stmt ";" expression ";" assign_stmt ")" . open_statement
   15               | . "for" "(" assign_stmt ";" ";" assign_stmt ")" open_statement
   16 closed_statement: . simple_statement
   17                 | . "if" "(" expression ")" closed_statement "else" closed_statement
   18                 | . "while" "(" expression ")" closed_statement
   19                 | . "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement
   19                 | "for" "(" assign_stmt ";" expression ";" assign_stmt ")" . closed_statement
   20                 | . "for" "(" assign_stmt ";" ";" assign_stmt ")" closed_statement
   21 simple_statement: . "{" statements "}" ";"
   22                 | . IDENTIFIER "=" expression ";"
   23                 | . IDENTIFIER "[" expression "]" "=" expression ";"
   24                 | . "break" ";"
   25                 | . "continue" ";"
   26                 | . "return" ";"
   27                 | . "return" expression ";"
   28                 | . IDENTIFIER "(" function_call_param ")" ";"

    "if"        shift, and go to state 117
    "for"       shift, and go to state 118
    "while"     shift, and go to state 119
    "continue"  shift, and go to state 120
    "break"     shift, and go to state 121
    "return"    shift, and go to state 122
    IDENTIFIER  shift, and go to state 123
    "{"         shift, and go to state 124

    open_statement    go to state 191
    closed_statement  go to state 192
    simple_statement  go to state 129


State 191

   14 open_statement: "for" "(" assign_stmt ";" expression ";" assign_stmt ")" open_statement .

    $default  reduce using rule 14 (open_statement)


State 192

   19 closed_statement: "for" "(" assign_stmt ";" expression ";" assign_stmt ")" closed_statement .

    $default  reduce using rule 19 (closed_statement)
